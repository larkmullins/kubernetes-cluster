# -*- mode: ruby -*-
# vi: set ft=ruby :

num_etcd    = 3
num_servers = 3
num_workers = 3

# install required plugins
# required_plugins = %w[vagrant-disksize]
# return if !Vagrant.plugins_enabled?
# plugins_to_install = required_plugins.select { |plugin| !Vagrant.has_plugin? plugin }
# if plugins_to_install.any?  
#   system "vagrant plugin install #{plugins_to_install.join(' ')}"
#   exit system 'vagrant up'
# end

Vagrant.configure(2) do |config|
    config.ssh.insert_key = false # use vagrant's insecure key
    config.disksize.size  = '50GB'

    # setup Virtualbox for CoreOS
    config.vm.provider :virtualbox do |vb|
        vb.check_guest_additions = false
        vb.functional_vboxsf     = false
        vb.customize ["modifyvm", :id, "--uart1", "0x3F8", "4"]
    end

    config.vm.box = "centos/7"
    config.vm.synced_folder ".", "/vagrant", type: "rsync"

    # set virtualbox settings
    config.vm.provider :virtualbox do |vb|
        vb.gui      = false
        vb.memory   = 1024
        vb.cpus     = 1
        vb.customize ["modifyvm", :id, "--cpuexecutioncap", "100"]
    end

    # etcd_ips        = Array.new
    # etcd_cluster    = Array.new
    # server_ips      = Array.new
    # config.trigger.before :up do |trigger|
    #     # build etcd ips and cluster arrays for later use
    #     (1..num_etcd).each do |id|
    #         ip = "172.1.1.#{id+100}"
    #         etcd_ips.push ip
    #         etcd_cluster.push "etcd-0#{id}=http://#{ip}:2380"
    #     end

    #     (1..num_servers).each do |id|
    #         server_ips.push "172.2.2.#{id+100}"
    #     end

    #     # copy required files to artifacts directory
    #     `cp provision/services/etcd.conf provision/artifacts/etcd.conf`
    #     `cp provision/services/etcd.service provision/artifacts/etcd.service`
    # end

    # etcd
    (1..num_etcd).each do |id|
        config.vm.define hostname = "%s-%02d" % ["etcd", id] do |etcd|
            etcd.vm.hostname = hostname
            etcd.vm.network :private_network, ip: "172.1.1.#{id+100}"

            etcd.vm.provision "shell", inline: "
                sudo yum install -y etcd
                sudo cp /vagrant/provision/etcd/etcd-0#{id}.conf /etc/etcd/etcd.conf
                sudo cp /vagrant/provision/etcd/etcd.service /lib/systemd/system
                sudo systemctl daemon-reload
                sudo systemctl enable etcd
                sudo systemctl start etcd &
            "
        end
    end

    # kube servers
    (1..num_servers).each do |id|
        config.vm.define hostname = "%s-%02d" % ["server", id] do |server|
            server.vm.hostname = hostname
            server.vm.network :private_network, ip: "172.2.2.#{id+100}"

            server.vm.provision "shell", inline: "
                sudo touch /etc/profile.d/etcd.sh
                sudo echo export ETCD_ENDPOINTS=\"http://172.1.1.101:2379,http://172.1.1.102:2379,http://172.1.1.103:2379\" >> /etc/profile.d/etcd.sh
                sudo yum install -y etcd flannel
                etcdctl --endpoints ${ETCD_ENDPOINTS} \
                    set /atomic.io/network/config '{ \"Network\": \"100.64.0.0/16\", \"SubnetLen\": 24, \"Backend\": {\"Type\": \"vxlan\"} }'
                sudo cp /vagrant/provision/flanneld/flanneld.conf /etc/sysconfig/flanneld
                sudo cp /vagrant/provision/flanneld/flanneld.service /lib/systemd/system
                sudo systemctl daemon-reload
                sudo systemctl enable flanneld
                sudo systemctl start flanneld &
            "
        end
    end
end